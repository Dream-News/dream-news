---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'news'>['data'];

const { title, description, pubDate, updatedDate, heroImage, author, tags } = Astro.props;
---

<html lang="zh-cn">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.metadata {
				display: flex;
				justify-content: space-between;
			}
			.date {
				margin: auto;
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.author{
				margin: auto;
				display: flex;
				margin-bottom: 0.5em;
			}
			.avatar {
				width: 50px;
				height: 50px;
				border-radius: 50%;
				margin: auto;
			}
			.avatar-name{
				margin: auto;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.tags-container{
				display: flex;
				flex-wrap: wrap;
				justify-content: center;
				margin-bottom: 0.5em;
			}
			.tag-link{
				margin: auto;
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
				text-decoration: none;
			}
			.tag{
				margin: auto;
				padding: 0.25em 0.5em;
				border-radius: 4px;
				background-color: rgb(var(--gray-light));
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="metadata">
							<div class="date">
								<FormattedDate date={pubDate} />
								{
									updatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={updatedDate} />
										</div>
									)
								}
							</div>
							<div class="author">
								<div class="avatar-name">{author}</div>
							</div>
						</div>
						<div class="tags-container">
						{
							tags.map((tag) => (
								
								<a href={`/tags/${tag}`} class="tag-link">
									<div class="tag">{tag}</div>
								</a>
							))
						}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
